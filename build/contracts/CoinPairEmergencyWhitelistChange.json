{
    "contractName": "CoinPairEmergencyWhitelistChange",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "contract Governed",
                    "name": "_coinPairPrice",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_emergencyPublisher",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "PUBLISH_MESSAGE_VERSION",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "contract IGovernor",
                    "name": "newIGovernor",
                    "type": "address"
                }
            ],
            "name": "changeIGovernor",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "coinPair",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "coinPairPrice",
            "outputs": [
                {
                    "internalType": "contract Governed",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "delegateCallToChanger",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "emergencyPublishingPeriodInBlocks",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "encodedData",
            "outputs": [
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "governor",
            "outputs": [
                {
                    "internalType": "contract IGovernor",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "lastPublicationBlock",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "maxSubscribedOraclesPerRound",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "oracleManager",
            "outputs": [
                {
                    "internalType": "contract OracleManager",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "token",
            "outputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "validPricePeriodInBlocks",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "execute",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "impersonate",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Governed\",\"name\":\"_coinPairPrice\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_emergencyPublisher\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PUBLISH_MESSAGE_VERSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IGovernor\",\"name\":\"newIGovernor\",\"type\":\"address\"}],\"name\":\"changeIGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coinPair\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coinPairPrice\",\"outputs\":[{\"internalType\":\"contract Governed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateCallToChanger\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyPublishingPeriodInBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encodedData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"contract IGovernor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"impersonate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPublicationBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSubscribedOraclesPerRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleManager\",\"outputs\":[{\"internalType\":\"contract OracleManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validPricePeriodInBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeIGovernor(address)\":{\"params\":{\"newIGovernor\":\"New governor address\"}},\"constructor\":{\"params\":{\"_coinPairPrice\":\"Address of coin pair price to upgrade\",\"_emergencyPublisher\":\"The address of the publisher to whitelist\"}},\"delegateCallToChanger(bytes)\":{\"params\":{\"data\":\"the serialized function arguments\"}},\"execute()\":{\"details\":\"Should be called by the governor, but this contract does not check that explicitly because it is not its responsability in the current architecture\"}},\"title\":\"CoinPairEmergencyWhitelistChange\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeIGovernor(address)\":{\"notice\":\"Change the contract's governor. Should be called through the old governance system\"},\"constructor\":\"Constructor\",\"delegateCallToChanger(bytes)\":{\"notice\":\"This method is used by a change contract to access the storage freely even without a setter.\"},\"execute()\":{\"notice\":\"Execute the changes.\"},\"governor()\":{\"notice\":\"The address of the contract which governs this one\"},\"impersonate(bytes)\":{\"notice\":\"Called by the Governed contract delegateCallToChanger method This methods runs in the Governed contract storage.\"}},\"notice\":\"This contract is a ChangeContract intended to be used to add an emergency publisher to the whitelist.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/change/CoinPairEmergencyWhitelistChange.sol\":\"CoinPairEmergencyWhitelistChange\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/CoinPairPrice.sol\":{\"keccak256\":\"0x6aa9082c94222886b48681e6d8c6c3c6f490ce2486ad61a808936f4f54234691\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://64f4f828e395677d37b13545b064ce7d67aa19f0fd0c5e19218c51a259e30ef0\",\"dweb:/ipfs/QmegiUZuVHxXVsoN26FAjwZmpFWCRF72ekZCyehbxX4jMf\"]},\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/CoinPairPriceStorage.sol\":{\"keccak256\":\"0xfcdf96be7b5a27cad4546ad99ab997ed70d3ea89e092da96bf1ab1422744571f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://60b0ee0bf253db442588c2d9223e66d7e665752c18940c63bee54257072e8c6a\",\"dweb:/ipfs/QmNQWwWrBRMSVB36GBnqziXbU8oUTixAxwk1pYa5n24Ptz\"]},\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/OracleManager.sol\":{\"keccak256\":\"0x14d30d0a1704bce00b278b9e3a3f0dab24199712a35f0a0823913cdf5f936dbc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ae3faa74a8259997c0757d402c0df1a2ecb6575f183047c5d4efb73879c955f6\",\"dweb:/ipfs/QmTFso7AFx8pDWEu6imfzDF7VseRPjBhsxeLLnR1tSxf4d\"]},\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/OracleManagerStorage.sol\":{\"keccak256\":\"0x3fc4061da2b3d68e6fe768fec430d87a247ea91c32eda2770cd6c6b7a1af04f3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://08a75cb1ed72f09bcb76fed63b16040b196b2a511eadffa28d1d1381db4ec53d\",\"dweb:/ipfs/QmYSr8yRNkfmNDk5SwM4mdukukxKzxvWx5124J5rrHK2KM\"]},\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/Staking.sol\":{\"keccak256\":\"0x4b874e64829c7e0489c6554eacf74f8e89b7f5cd7674de2559c355643edddd96\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://12702183a0bc5ce9f1563156eab8b295cb42c4e2e88b3609ade7f4a4230cd2e2\",\"dweb:/ipfs/QmTsRZErg4to53ThzZsiieDwqNnvAgi3ZCwzbyxmFjhuLB\"]},\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/StakingStorage.sol\":{\"keccak256\":\"0x17766038b0532101749ff36ff8d282faea246363fa4a6c18bc47beae1a002bb1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0a9e37ad5bf3a061f0fc4a45985b71602573b7e48e169dea32c30476b5dec3a6\",\"dweb:/ipfs/QmYdL7q4YWN5joaifD3C5AP8LEFsrqnyw962eHaJiMWXCU\"]},\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/Supporters.sol\":{\"keccak256\":\"0xbb6ff7c3d33441dd3eb3b66bac10be374c36e262fe791f732a0ff1d1b769a784\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://acc546e5e045fa37bd73d058ec99b71c7b123010763267c8d06681db4cb223a3\",\"dweb:/ipfs/QmYqMd5JKxAJaVQ2h4hHVdwBRNjXjDkE3oaBVWPvthYC3i\"]},\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/SupportersStorage.sol\":{\"keccak256\":\"0xd9ae212fa5c55c4499a9f14d7cc65a0507a28afe2b59525975e62bbefa474f7c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c6c4e003a0cb609fa8f9ac9548f4afb3c1befd6e7169c82172dfb420f9fa4bc3\",\"dweb:/ipfs/Qmc6dzBLV7vuGx2Px5pCDvEUh7JB9USDTv9M7b2QAMFHMZ\"]},\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/change/CoinPairEmergencyWhitelistChange.sol\":{\"keccak256\":\"0x056a6d35469426350b942e2e11ec9b4dfda280cc31ecfac10f7b60cf23ca78d2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bdf39e1e912e6ad50cfeb69ba8faee94289c36494f5253e864e731bd5325b510\",\"dweb:/ipfs/QmZiZUP6DD93HT9fNqn2Bqeg72F2hsvZiBE1Fon7Pp1rD2\"]},\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/libs/AddressSetLib.sol\":{\"keccak256\":\"0x164a53571663eed760ad55e9e580e757bee459f73485337d2d6edbb4a15d11d7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://01b4a24867c85179f07dd19d962b89fdf5d4e9a452221536d2f9430fcf235ad4\",\"dweb:/ipfs/QmU4sWw2EZCVR6HEccoLaRNDXUq6T4PXwKyWg2axukGQFH\"]},\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/libs/CoinPairRegisterLib.sol\":{\"keccak256\":\"0x5e5add9d7b0afc8c9d4cfaa84cf69e704994cf496199821361169b719ed6861b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c1412e11b85604b88b92e38f0e7c127d6ec41ed086c3ae320fa253e9a9526a76\",\"dweb:/ipfs/QmcyeqFmWgVDxzBbr912u4crkmKhSFFVE2KtmfQYiEdmid\"]},\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/libs/IterableOraclesLib.sol\":{\"keccak256\":\"0xd447415cc8821c7a686852719487d9b650cabd9de96e807e2672a4c89622fa0c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://13d22ef00fa84a1c85f297d7595b999d7ecd0028ab84d3c84a0db82f4a45e632\",\"dweb:/ipfs/QmVWryR9rwn9W2pZCZMQ3NZr7F6CALcQbrD4x4quVGDECB\"]},\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/libs/IterableWhitelistLib.sol\":{\"keccak256\":\"0x2319e0dfd6ac0478c5a8bc1501b6f9111eacd91e9aa88de2c96480b8b87c9f0b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://670b33cba543b9408cb7b4ca40d3ca1e562637191f12cd06d955cb97b4a95e2e\",\"dweb:/ipfs/QmQF6eVwg7mFozevyyYamLJWqaFKpuZqgrUFcPVkdNE3XG\"]},\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/libs/RoundInfoLib.sol\":{\"keccak256\":\"0x0a890ce2f07ac5f53555b447ea4dc60c890aa60317329217a3aebd3c4a323e06\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://240e0f16f22a7304f2bed2c6760c4b711a12b345138fba9b36e3971255455879\",\"dweb:/ipfs/QmViKyKz6scQrNUQZoQbnfFFxrBdRsmFWGzNiM7mKCJiuS\"]},\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/libs/SubscribedOraclesLib.sol\":{\"keccak256\":\"0xff0cacfd5779d8aac2840650c78ee98961f29aaf48c894ce255aac90f9d213ec\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e2b1b2e11dbd5a84802c9fa8488d48f8cbaa84e9fee67417fc27f1e82a289f81\",\"dweb:/ipfs/QmX5ufFKwojzAQnpW4St7xb7HmqGZhsMzBbaUAcfmyA7G2\"]},\"/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/libs/SupportersLib.sol\":{\"keccak256\":\"0xa80f2b92a59e78b256fa6e7799f2f6b271d044b72eda3909547dded83d9f7252\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://de9a6e237bc9c10dcc4149ba6bb4948dbb6031a6ea485d9c7dad27b1e617c4d8\",\"dweb:/ipfs/QmS5x4RpZXqB3bEGqcYW5siJDeYedbf93TrHwcqQ1o25FX\"]},\"@moc/shared/contracts/IDelayMachine.sol\":{\"keccak256\":\"0x23337ca0b602e0b41b6da21f44ab567f1bd5c970f8735109f34d7cff9ff894ef\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c5ca4656aa5776c58e9ff13603459232ab6fde49bff3ebeecff5dfda20db5fdb\",\"dweb:/ipfs/QmciATUjQHgwNNpVgxrG9pMx8jJhF9h2cnvRfw1u8rMoER\"]},\"@moc/shared/contracts/IPriceProvider.sol\":{\"keccak256\":\"0xe23c45a9401a30709263ca8a1c4c81c7fcabbbdce4124058c46859b017be748b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://43bf5597963c3f7c9e258ae09a12d26a32b171163e847c0ea22255552a835605\",\"dweb:/ipfs/QmUetpLBWhBCQugHS2JFkERKurP67hQUcunuG48ZHKid3z\"]},\"@moc/shared/contracts/IPriceProviderRegisterEntry.sol\":{\"keccak256\":\"0x224dc253c7d3dcd60e27617780cd9c656203e8632d67699f4cda4dc51c7f5e14\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7e91997efaf82d34c4df20fcfbaae754a8c45f875a71767c3a1b5f6b3881b142\",\"dweb:/ipfs/Qme6rjQN9RAXYoWr52QERnTtGHPfB25qu6K4KaBQzNKog5\"]},\"@moc/shared/contracts/IStakingMachine.sol\":{\"keccak256\":\"0x90634c47af7e040cd475e726a92fb37a19dfe3cc4c40f66798de39575054736a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6f7af0b7a2fa9d639efacdb61079739633397732ff0d03b8eba15ad5e81c38ff\",\"dweb:/ipfs/QmPYDJ99QTgsJDJJA4CNV3wJgbuWmGzrj9AB7mr1m6KWA4\"]},\"@moc/shared/contracts/moc-governance/Governance/ChangeContract.sol\":{\"keccak256\":\"0x6c786977acab4c076087e4569b2fd423e2c3a7e45150353c18de328b7e114843\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cbdaaed4b97fc67586f6f20f185d6227dd4a1d0896bd6db20ee06744cca2eaa6\",\"dweb:/ipfs/QmbZrRtxMdebQa1dHfTdC1pPA48ZvzSopcc2pLmmJ7XJ9X\"]},\"@moc/shared/contracts/moc-governance/Governance/Governed.sol\":{\"keccak256\":\"0xf948f3ef0d990c9b5199cb96ed42a7b4b96b1dce0abfc168289f9de8576286e2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5b770c1391989e9db75789bb15cc4413d520eecb327fed0c114a66407a3f4404\",\"dweb:/ipfs/QmPqRtG3cfB3tc5fFs9Q8yMNkxHB4oxMSY27jDXYhB754c\"]},\"@moc/shared/contracts/moc-governance/Governance/IGovernor.sol\":{\"keccak256\":\"0xed68469a6e1759efc5dece43aaf7fdf25e39163626df454bd9f9662ca8e9df61\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a615e8209f9f332ed8d16452fd83c412f44162bd6fb8af6a1556bdc033a36735\",\"dweb:/ipfs/Qmda7FzLXHG9WZSTVBXwGCjLT7xU5Ugh287jQ4qafAr5WX\"]},\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]}},\"version\":1}",
    "bytecode": "0x608060405234801561001057600080fd5b50604051610b37380380610b378339818101604052604081101561003357600080fd5b50805160209182015160af80546001600160a01b0319166001600160a01b0380851691909117909155604080519183168286015280518083038601815291810190528051929391926100899260b0920190610091565b505050610124565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100d257805160ff19168380011785556100ff565b828001600101855582156100ff579182015b828111156100ff5782518255916020019190600101906100e4565b5061010b92915061010f565b5090565b5b8082111561010b5760008155600101610110565b610a04806101336000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a16227ca11610097578063dc8990e111610066578063dc8990e11461027d578063e10cbe29146102ed578063f0cf1db9146102f5578063fc0c546a146102fd576100f5565b8063a16227ca14610162578063b6e08330146101d2578063cc53a005146101f8578063d2b0bf7c14610200576100f5565b8063565d878c116100d3578063565d878c1461014057806361461954146101485780636801fd5b146101525780639a5b37811461015a576100f5565b80630c340a24146100fa57806334c1e5b51461011e5780634b61230414610138575b600080fd5b610102610305565b604080516001600160a01b039092168252519081900360200190f35b610126610314565b60408051918252519081900360200190f35b61010261031a565b610102610329565b610150610338565b005b610126610415565b61012661041b565b6101506004803603602081101561017857600080fd5b81019060208101813564010000000081111561019357600080fd5b8201836020820111156101a557600080fd5b803590602001918460018302840111640100000000831117156101c757600080fd5b509092509050610421565b610150600480360360208110156101e857600080fd5b50356001600160a01b031661044b565b61012661059b565b6102086105a1565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561024257818101518382015260200161022a565b50505050905090810190601f16801561026f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101506004803603602081101561029357600080fd5b8101906020810181356401000000008111156102ae57600080fd5b8201836020820111156102c057600080fd5b803590602001918460018302840111640100000000831117156102e257600080fd5b50909250905061062f565b61012661086e565b610126610873565b610102610879565b6033546001600160a01b031681565b60775481565b60af546001600160a01b031681565b607b546001600160a01b031681565b60af5460405163dc8990e160e01b815260206004820190815260b0805460026000196001831615610100020190911604602484018190526001600160a01b039094169363dc8990e1939192918291604490910190849080156103db5780601f106103b0576101008083540402835291602001916103db565b820191906000526020600020905b8154815290600101906020018083116103be57829003601f168201915b505092505050600060405180830381600087803b1580156103fb57600080fd5b505af115801561040f573d6000803e3d6000fd5b50505050565b60665481565b60795481565b6104478282602081101561043457600080fd5b50607490356001600160a01b0316610888565b5050565b6033546040805163d994d6d560e01b815233600482015290516001600160a01b039092169163d994d6d591602480820192602092909190829003018186803b15801561049657600080fd5b505afa1580156104aa573d6000803e3d6000fd5b505050506040513d60208110156104c057600080fd5b50516040805180820190915260168152753737ba2fb0baba3437b934bd32b22fb1b430b733b2b960511b6020820152906105785760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561053d578181015183820152602001610525565b50505050905090810190601f16801561056a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50603380546001600160a01b0319166001600160a01b0392909216919091179055565b60785481565b60b0805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106275780601f106105fc57610100808354040283529160200191610627565b820191906000526020600020905b81548152906001019060200180831161060a57829003601f168201915b505050505081565b6033546040805163d994d6d560e01b815233600482015290516001600160a01b039092169163d994d6d591602480820192602092909190829003018186803b15801561067a57600080fd5b505afa15801561068e573d6000803e3d6000fd5b505050506040513d60208110156106a457600080fd5b50516040805180820190915260168152753737ba2fb0baba3437b934bd32b22fb1b430b733b2b960511b60208201529061071f5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561053d578181015183820152602001610525565b50604051602060248201908152604482018390523391600091839186918691819060640184848082843760008382015260408051601f909201601f1990811690940182810390940182529283526020810180516001600160e01b03166350b113e560e11b17815292518151919750955085945091925081905083835b602083106107ba5780518252601f19909201916020918201910161079b565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461081a576040519150601f19603f3d011682016040523d82523d6000602084013e61081f565b606091505b505090508061040f576040805162461bcd60e51b8152602060048201526016602482015275115c9c9bdc881a5b8819195b1959d85d194818d85b1b60521b604482015290519081900360640190fd5b600381565b607a5481565b607c546001600160a01b031681565b6001600160a01b0381166108e3576040805162461bcd60e51b815260206004820152601760248201527f4163636f756e74206d757374206e6f7420626520307830000000000000000000604482015290519081900360640190fd5b60006108ef8383610948565b905080610943576040805162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420616c72656164792077686974656c69737465640000000000604482015290519081900360640190fd5b505050565b600061095483836109ad565b6109a357508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b038616908117909155855490825282860190935260409020919091556109a7565b5060005b92915050565b6001600160a01b03166000908152600191909101602052604090205415159056fea26469706673582212207e44969fb2a4f6e0d8507395b4358508889b7b888e6e541b75966d4b7cd9326264736f6c634300060c0033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a16227ca11610097578063dc8990e111610066578063dc8990e11461027d578063e10cbe29146102ed578063f0cf1db9146102f5578063fc0c546a146102fd576100f5565b8063a16227ca14610162578063b6e08330146101d2578063cc53a005146101f8578063d2b0bf7c14610200576100f5565b8063565d878c116100d3578063565d878c1461014057806361461954146101485780636801fd5b146101525780639a5b37811461015a576100f5565b80630c340a24146100fa57806334c1e5b51461011e5780634b61230414610138575b600080fd5b610102610305565b604080516001600160a01b039092168252519081900360200190f35b610126610314565b60408051918252519081900360200190f35b61010261031a565b610102610329565b610150610338565b005b610126610415565b61012661041b565b6101506004803603602081101561017857600080fd5b81019060208101813564010000000081111561019357600080fd5b8201836020820111156101a557600080fd5b803590602001918460018302840111640100000000831117156101c757600080fd5b509092509050610421565b610150600480360360208110156101e857600080fd5b50356001600160a01b031661044b565b61012661059b565b6102086105a1565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561024257818101518382015260200161022a565b50505050905090810190601f16801561026f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101506004803603602081101561029357600080fd5b8101906020810181356401000000008111156102ae57600080fd5b8201836020820111156102c057600080fd5b803590602001918460018302840111640100000000831117156102e257600080fd5b50909250905061062f565b61012661086e565b610126610873565b610102610879565b6033546001600160a01b031681565b60775481565b60af546001600160a01b031681565b607b546001600160a01b031681565b60af5460405163dc8990e160e01b815260206004820190815260b0805460026000196001831615610100020190911604602484018190526001600160a01b039094169363dc8990e1939192918291604490910190849080156103db5780601f106103b0576101008083540402835291602001916103db565b820191906000526020600020905b8154815290600101906020018083116103be57829003601f168201915b505092505050600060405180830381600087803b1580156103fb57600080fd5b505af115801561040f573d6000803e3d6000fd5b50505050565b60665481565b60795481565b6104478282602081101561043457600080fd5b50607490356001600160a01b0316610888565b5050565b6033546040805163d994d6d560e01b815233600482015290516001600160a01b039092169163d994d6d591602480820192602092909190829003018186803b15801561049657600080fd5b505afa1580156104aa573d6000803e3d6000fd5b505050506040513d60208110156104c057600080fd5b50516040805180820190915260168152753737ba2fb0baba3437b934bd32b22fb1b430b733b2b960511b6020820152906105785760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561053d578181015183820152602001610525565b50505050905090810190601f16801561056a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50603380546001600160a01b0319166001600160a01b0392909216919091179055565b60785481565b60b0805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106275780601f106105fc57610100808354040283529160200191610627565b820191906000526020600020905b81548152906001019060200180831161060a57829003601f168201915b505050505081565b6033546040805163d994d6d560e01b815233600482015290516001600160a01b039092169163d994d6d591602480820192602092909190829003018186803b15801561067a57600080fd5b505afa15801561068e573d6000803e3d6000fd5b505050506040513d60208110156106a457600080fd5b50516040805180820190915260168152753737ba2fb0baba3437b934bd32b22fb1b430b733b2b960511b60208201529061071f5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561053d578181015183820152602001610525565b50604051602060248201908152604482018390523391600091839186918691819060640184848082843760008382015260408051601f909201601f1990811690940182810390940182529283526020810180516001600160e01b03166350b113e560e11b17815292518151919750955085945091925081905083835b602083106107ba5780518252601f19909201916020918201910161079b565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461081a576040519150601f19603f3d011682016040523d82523d6000602084013e61081f565b606091505b505090508061040f576040805162461bcd60e51b8152602060048201526016602482015275115c9c9bdc881a5b8819195b1959d85d194818d85b1b60521b604482015290519081900360640190fd5b600381565b607a5481565b607c546001600160a01b031681565b6001600160a01b0381166108e3576040805162461bcd60e51b815260206004820152601760248201527f4163636f756e74206d757374206e6f7420626520307830000000000000000000604482015290519081900360640190fd5b60006108ef8383610948565b905080610943576040805162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420616c72656164792077686974656c69737465640000000000604482015290519081900360640190fd5b505050565b600061095483836109ad565b6109a357508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b038616908117909155855490825282860190935260409020919091556109a7565b5060005b92915050565b6001600160a01b03166000908152600191909101602052604090205415159056fea26469706673582212207e44969fb2a4f6e0d8507395b4358508889b7b888e6e541b75966d4b7cd9326264736f6c634300060c0033",
    "immutableReferences": {},
    "sourceMap": "479:1172:20:-:0;;;815:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;815:175:20;;;;;;;898:13;:30;;-1:-1:-1;;;;;;898:30:20;-1:-1:-1;;;;;898:30:20;;;;;;;;;;815:175;952:31;;;;;;;;;;;;;;;;;;;;;;;938:45;;815:175;;;;938:45;;:11;;:45;;;:::i;:::-;;815:175;;479:1172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;479:1172:20;;;-1:-1:-1;479:1172:20;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "479:1172:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;550:25:60;;;:::i;:::-;;;;-1:-1:-1;;;;;550:25:60;;;;;;;;;;;;;;1928:23:4;;;:::i;:::-;;;;;;;;;;;;;;;;567:29:20;;;:::i;2344:34:4:-;;;:::i;1212:145:20:-;;;:::i;:::-;;1208:43:4;;;:::i;2128:39::-;;;:::i;1507:142:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1507:142:20;;-1:-1:-1;1507:142:20;-1:-1:-1;1507:142:20;:::i;1511:120:60:-;;;;;;;;;;;;;;;;-1:-1:-1;1511:120:60;-1:-1:-1;;;;;1511:120:60;;:::i;2018:35:4:-;;;:::i;602:24:20:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:318:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1812:318:60;;-1:-1:-1;1812:318:60;-1:-1:-1;1812:318:60;:::i;1105:51:4:-;;;:::i;2289:48::-;;;:::i;2385:19::-;;;:::i;550:25:60:-;;;-1:-1:-1;;;;;550:25:60;;:::o;1928:23:4:-;;;;:::o;567:29:20:-;;;-1:-1:-1;;;;;567:29:20;;:::o;2344:34:4:-;;;-1:-1:-1;;;;;2344:34:4;;:::o;1212:145:20:-;1259:13;;:48;;-1:-1:-1;;;1259:48:20;;;;;;;;;1295:11;1259:48;;;-1:-1:-1;;1259:13:20;:48;;;:13;:48;;;;;;;;;;;;-1:-1:-1;;;;;1259:13:20;;;;:35;;1295:11;;1259:48;;;;;;;;1295:11;;1259:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1212:145::o;1208:43:4:-;;;;:::o;2128:39::-;;;;:::o;1507:142:20:-;1568:74;1625:4;;1614:27;;;;;;;;;;-1:-1:-1;1568:29:20;;1614:27;-1:-1:-1;;;;;1614:27:20;1568:45;:74::i;:::-;1507:142;;:::o;1511:120:60:-;893:8;;:40;;;-1:-1:-1;;;893:40:60;;922:10;893:40;;;;;;-1:-1:-1;;;;;893:8:60;;;;:28;;:40;;;;;;;;;;;;;;;:8;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;893:40:60;935:22;;;;;;;;;;;;-1:-1:-1;;;893:40:60;935:22;;;;885:73;;;;-1:-1:-1;;;885:73:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1601:8:60::1;:23:::0;;-1:-1:-1;;;;;;1601:23:60::1;-1:-1:-1::0;;;;;1601:23:60;;;::::1;::::0;;;::::1;::::0;;1511:120::o;2018:35:4:-;;;;:::o;602:24:20:-;;;;;;;;;;;;;;;-1:-1:-1;;602:24:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1812:318:60:-;893:8;;:40;;;-1:-1:-1;;;893:40:60;;922:10;893:40;;;;;;-1:-1:-1;;;;;893:8:60;;;;:28;;:40;;;;;;;;;;;;;;;:8;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;893:40:60;935:22;;;;;;;;;;;;-1:-1:-1;;;893:40:60;935:22;;;;885:73;;;;-1:-1:-1;;;885:73:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2010:51:60::1;::::0;::::1;;::::0;::::1;::::0;;;;;;;;;1930:10:::1;::::0;1905:22:::1;::::0;1930:10;;2056:4;;;;2010:51;;;;2056:4;;;;2010:51;::::1;;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;-1:-1:-1::0;;2010:51:60;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;2010:51:60::1;-1:-1:-1::0;;;2010:51:60::1;::::0;;1969:102;;;;2010:51;;-1:-1:-1;1969:102:60;-1:-1:-1;1969:102:60;;-1:-1:-1;2010:51:60;;-1:-1:-1;1969:102:60;;-1:-1:-1;1969:102:60;2010:51;1969:102:::1;;;;;;::::0;;;;-1:-1:-1;;1969:102:60;;;;::::1;::::0;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1950:121;;;2089:7;2081:42;;;::::0;;-1:-1:-1;;;2081:42:60;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2081:42:60;;;;;;;;;;;;;::::1;1105:51:4::0;1155:1;1105:51;:::o;2289:48::-;;;;:::o;2385:19::-;;;-1:-1:-1;;;;;2385:19:4;;:::o;1880:263:40:-;-1:-1:-1;;;;;1985:21:40;;1977:57;;;;;-1:-1:-1;;;1977:57:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;2044:10;2057:24;:4;2073:7;2057:15;:24::i;:::-;2044:37;;2099:5;2091:45;;;;;-1:-1:-1;;;2091:45:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;1880:263;;;:::o;1152:410:36:-;1222:4;1243:20;1252:3;1257:5;1243:8;:20::i;:::-;1238:318;;-1:-1:-1;1279:23:36;;;;;;;;-1:-1:-1;1279:23:36;;;;;;;;;;;;-1:-1:-1;;;;;;1279:23:36;-1:-1:-1;;;;;1279:23:36;;;;;;;;1459:18;;1437:19;;;:12;;;:19;;;;;;:40;;;;1491:11;;1238:318;-1:-1:-1;1540:5:36;1238:318;1152:410;;;;:::o;3354:134::-;-1:-1:-1;;;;;3457:19:36;3434:4;3457:19;;;:12;;;;;:19;;;;;;:24;;;3354:134::o",
    "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.6.12;\n\nimport {ChangeContract} from \"@moc/shared/contracts/moc-governance/Governance/ChangeContract.sol\";\nimport {CoinPairPriceStorage} from \"../CoinPairPriceStorage.sol\";\nimport {Governed} from \"@moc/shared/contracts/moc-governance/Governance/Governed.sol\";\n\n/**\n  @title CoinPairEmergencyWhitelistChange\n  @notice This contract is a ChangeContract intended to be used to add an emergency publisher to the whitelist.\n */\ncontract CoinPairEmergencyWhitelistChange is CoinPairPriceStorage, ChangeContract {\n    Governed public coinPairPrice;\n    bytes public encodedData;\n\n    /**\n      @notice Constructor\n      @param _coinPairPrice Address of coin pair price to upgrade\n      @param _emergencyPublisher The address of the publisher to whitelist\n    */\n    constructor(Governed _coinPairPrice, address _emergencyPublisher) public {\n        coinPairPrice = _coinPairPrice;\n        encodedData = abi.encode(_emergencyPublisher);\n    }\n\n    /**\n      @notice Execute the changes.\n      @dev Should be called by the governor, but this contract does not check that explicitly because\n      it is not its responsability in the current architecture\n     */\n    function execute() external override {\n        coinPairPrice.delegateCallToChanger(encodedData);\n        // TODO: Make it usable just once.\n    }\n\n    /**\n        Called by the Governed contract delegateCallToChanger method\n        This methods runs in the Governed contract storage.\n    */\n    function impersonate(bytes calldata data) external {\n        emergencyPublishWhitelistData._addToWhitelist(abi.decode(data, (address)));\n    }\n}\n",
    "sourcePath": "/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/change/CoinPairEmergencyWhitelistChange.sol",
    "ast": {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/change/CoinPairEmergencyWhitelistChange.sol",
        "exportedSymbols": {
            "CoinPairEmergencyWhitelistChange": [5518]
        },
        "id": 5519,
        "license": "UNLICENSED",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 5451,
                "literals": ["solidity", "0.6", ".12"],
                "nodeType": "PragmaDirective",
                "src": "39:23:20"
            },
            {
                "absolutePath": "@moc/shared/contracts/moc-governance/Governance/ChangeContract.sol",
                "file": "@moc/shared/contracts/moc-governance/Governance/ChangeContract.sol",
                "id": 5453,
                "nodeType": "ImportDirective",
                "scope": 5519,
                "sourceUnit": 11373,
                "src": "64:98:20",
                "symbolAliases": [
                    {
                        "foreign": {
                            "argumentTypes": null,
                            "id": 5452,
                            "name": "ChangeContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": null,
                            "src": "72:14:20",
                            "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                            }
                        },
                        "local": null
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/CoinPairPriceStorage.sol",
                "file": "../CoinPairPriceStorage.sol",
                "id": 5455,
                "nodeType": "ImportDirective",
                "scope": 5519,
                "sourceUnit": 1464,
                "src": "163:65:20",
                "symbolAliases": [
                    {
                        "foreign": {
                            "argumentTypes": null,
                            "id": 5454,
                            "name": "CoinPairPriceStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": null,
                            "src": "171:20:20",
                            "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                            }
                        },
                        "local": null
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "@moc/shared/contracts/moc-governance/Governance/Governed.sol",
                "file": "@moc/shared/contracts/moc-governance/Governance/Governed.sol",
                "id": 5457,
                "nodeType": "ImportDirective",
                "scope": 5519,
                "sourceUnit": 11457,
                "src": "229:86:20",
                "symbolAliases": [
                    {
                        "foreign": {
                            "argumentTypes": null,
                            "id": 5456,
                            "name": "Governed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": null,
                            "src": "237:8:20",
                            "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                            }
                        },
                        "local": null
                    }
                ],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 5459,
                            "name": "CoinPairPriceStorage",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1463,
                            "src": "524:20:20",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CoinPairPriceStorage_$1463",
                                "typeString": "contract CoinPairPriceStorage"
                            }
                        },
                        "id": 5460,
                        "nodeType": "InheritanceSpecifier",
                        "src": "524:20:20"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 5461,
                            "name": "ChangeContract",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 11372,
                            "src": "546:14:20",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ChangeContract_$11372",
                                "typeString": "contract ChangeContract"
                            }
                        },
                        "id": 5462,
                        "nodeType": "InheritanceSpecifier",
                        "src": "546:14:20"
                    }
                ],
                "contractDependencies": [1463, 8015, 11372, 11456, 11551],
                "contractKind": "contract",
                "documentation": {
                    "id": 5458,
                    "nodeType": "StructuredDocumentation",
                    "src": "317:161:20",
                    "text": "@title CoinPairEmergencyWhitelistChange\n@notice This contract is a ChangeContract intended to be used to add an emergency publisher to the whitelist."
                },
                "fullyImplemented": true,
                "id": 5518,
                "linearizedBaseContracts": [5518, 11372, 1463, 8015, 11456, 11551],
                "name": "CoinPairEmergencyWhitelistChange",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "4b612304",
                        "id": 5464,
                        "mutability": "mutable",
                        "name": "coinPairPrice",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 5518,
                        "src": "567:29:20",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Governed_$11456",
                            "typeString": "contract Governed"
                        },
                        "typeName": {
                            "contractScope": null,
                            "id": 5463,
                            "name": "Governed",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 11456,
                            "src": "567:8:20",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Governed_$11456",
                                "typeString": "contract Governed"
                            }
                        },
                        "value": null,
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "d2b0bf7c",
                        "id": 5466,
                        "mutability": "mutable",
                        "name": "encodedData",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 5518,
                        "src": "602:24:20",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes"
                        },
                        "typeName": {
                            "id": 5465,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "602:5:20",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                            }
                        },
                        "value": null,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 5485,
                            "nodeType": "Block",
                            "src": "888:102:20",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 5476,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 5474,
                                            "name": "coinPairPrice",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5464,
                                            "src": "898:13:20",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Governed_$11456",
                                                "typeString": "contract Governed"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "id": 5475,
                                            "name": "_coinPairPrice",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5469,
                                            "src": "914:14:20",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Governed_$11456",
                                                "typeString": "contract Governed"
                                            }
                                        },
                                        "src": "898:30:20",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Governed_$11456",
                                            "typeString": "contract Governed"
                                        }
                                    },
                                    "id": 5477,
                                    "nodeType": "ExpressionStatement",
                                    "src": "898:30:20"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 5483,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 5478,
                                            "name": "encodedData",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5466,
                                            "src": "938:11:20",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_storage",
                                                "typeString": "bytes storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "arguments": [
                                                {
                                                    "argumentTypes": null,
                                                    "id": 5481,
                                                    "name": "_emergencyPublisher",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 5471,
                                                    "src": "963:19:20",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 5479,
                                                    "name": "abi",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -1,
                                                    "src": "952:3:20",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_abi",
                                                        "typeString": "abi"
                                                    }
                                                },
                                                "id": 5480,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "encode",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "952:10:20",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                    "typeString": "function () pure returns (bytes memory)"
                                                }
                                            },
                                            "id": 5482,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "952:31:20",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes memory"
                                            }
                                        },
                                        "src": "938:45:20",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage",
                                            "typeString": "bytes storage ref"
                                        }
                                    },
                                    "id": 5484,
                                    "nodeType": "ExpressionStatement",
                                    "src": "938:45:20"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 5467,
                            "nodeType": "StructuredDocumentation",
                            "src": "633:177:20",
                            "text": "@notice Constructor\n@param _coinPairPrice Address of coin pair price to upgrade\n@param _emergencyPublisher The address of the publisher to whitelist"
                        },
                        "id": 5486,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "overrides": null,
                        "parameters": {
                            "id": 5472,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 5469,
                                    "mutability": "mutable",
                                    "name": "_coinPairPrice",
                                    "nodeType": "VariableDeclaration",
                                    "overrides": null,
                                    "scope": 5486,
                                    "src": "827:23:20",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Governed_$11456",
                                        "typeString": "contract Governed"
                                    },
                                    "typeName": {
                                        "contractScope": null,
                                        "id": 5468,
                                        "name": "Governed",
                                        "nodeType": "UserDefinedTypeName",
                                        "referencedDeclaration": 11456,
                                        "src": "827:8:20",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Governed_$11456",
                                            "typeString": "contract Governed"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 5471,
                                    "mutability": "mutable",
                                    "name": "_emergencyPublisher",
                                    "nodeType": "VariableDeclaration",
                                    "overrides": null,
                                    "scope": 5486,
                                    "src": "852:27:20",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 5470,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "852:7:20",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "826:54:20"
                        },
                        "returnParameters": {
                            "id": 5473,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "888:0:20"
                        },
                        "scope": 5518,
                        "src": "815:175:20",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [11371],
                        "body": {
                            "id": 5497,
                            "nodeType": "Block",
                            "src": "1249:108:20",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 5494,
                                                "name": "encodedData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5466,
                                                "src": "1295:11:20",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_storage",
                                                    "typeString": "bytes storage ref"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_storage",
                                                    "typeString": "bytes storage ref"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 5491,
                                                "name": "coinPairPrice",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5464,
                                                "src": "1259:13:20",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Governed_$11456",
                                                    "typeString": "contract Governed"
                                                }
                                            },
                                            "id": 5493,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "delegateCallToChanger",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 11451,
                                            "src": "1259:35:20",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                                "typeString": "function (bytes memory) external"
                                            }
                                        },
                                        "id": 5495,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1259:48:20",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 5496,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1259:48:20"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 5487,
                            "nodeType": "StructuredDocumentation",
                            "src": "996:211:20",
                            "text": "@notice Execute the changes.\n@dev Should be called by the governor, but this contract does not check that explicitly because\nit is not its responsability in the current architecture"
                        },
                        "functionSelector": "61461954",
                        "id": 5498,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "execute",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 5489,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "1240:8:20"
                        },
                        "parameters": {
                            "id": 5488,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1228:2:20"
                        },
                        "returnParameters": {
                            "id": 5490,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1249:0:20"
                        },
                        "scope": 5518,
                        "src": "1212:145:20",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 5516,
                            "nodeType": "Block",
                            "src": "1558:91:20",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 5509,
                                                        "name": "data",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 5501,
                                                        "src": "1625:4:20",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                                            "typeString": "bytes calldata"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "components": [
                                                            {
                                                                "argumentTypes": null,
                                                                "id": 5511,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "1632:7:20",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 5510,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "1632:7:20",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": null,
                                                                        "typeString": null
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "id": 5512,
                                                        "isConstant": false,
                                                        "isInlineArray": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "TupleExpression",
                                                        "src": "1631:9:20",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                                            "typeString": "bytes calldata"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 5507,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -1,
                                                        "src": "1614:3:20",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 5508,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "decode",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "1614:10:20",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                                        "typeString": "function () pure"
                                                    }
                                                },
                                                "id": 5513,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1614:27:20",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 5504,
                                                "name": "emergencyPublishWhitelistData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1424,
                                                "src": "1568:29:20",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_IterableWhitelistData_$8021_storage",
                                                    "typeString": "struct IterableWhitelistLib.IterableWhitelistData storage ref"
                                                }
                                            },
                                            "id": 5506,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "_addToWhitelist",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 8080,
                                            "src": "1568:45:20",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_IterableWhitelistData_$8021_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_IterableWhitelistData_$8021_storage_ptr_$",
                                                "typeString": "function (struct IterableWhitelistLib.IterableWhitelistData storage pointer,address)"
                                            }
                                        },
                                        "id": 5514,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1568:74:20",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 5515,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1568:74:20"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 5499,
                            "nodeType": "StructuredDocumentation",
                            "src": "1363:139:20",
                            "text": "Called by the Governed contract delegateCallToChanger method\nThis methods runs in the Governed contract storage."
                        },
                        "functionSelector": "a16227ca",
                        "id": 5517,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "impersonate",
                        "nodeType": "FunctionDefinition",
                        "overrides": null,
                        "parameters": {
                            "id": 5502,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 5501,
                                    "mutability": "mutable",
                                    "name": "data",
                                    "nodeType": "VariableDeclaration",
                                    "overrides": null,
                                    "scope": 5517,
                                    "src": "1528:19:20",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 5500,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1528:5:20",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1527:21:20"
                        },
                        "returnParameters": {
                            "id": 5503,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1558:0:20"
                        },
                        "scope": 5518,
                        "src": "1507:142:20",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 5519,
                "src": "479:1172:20"
            }
        ],
        "src": "39:1613:20"
    },
    "legacyAST": {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/change/CoinPairEmergencyWhitelistChange.sol",
        "exportedSymbols": {
            "CoinPairEmergencyWhitelistChange": [5518]
        },
        "id": 5519,
        "license": "UNLICENSED",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 5451,
                "literals": ["solidity", "0.6", ".12"],
                "nodeType": "PragmaDirective",
                "src": "39:23:20"
            },
            {
                "absolutePath": "@moc/shared/contracts/moc-governance/Governance/ChangeContract.sol",
                "file": "@moc/shared/contracts/moc-governance/Governance/ChangeContract.sol",
                "id": 5453,
                "nodeType": "ImportDirective",
                "scope": 5519,
                "sourceUnit": 11373,
                "src": "64:98:20",
                "symbolAliases": [
                    {
                        "foreign": {
                            "argumentTypes": null,
                            "id": 5452,
                            "name": "ChangeContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": null,
                            "src": "72:14:20",
                            "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                            }
                        },
                        "local": null
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/adji/Desktop/work/coinfabrik/moc-oraculos/contracts/CoinPairPriceStorage.sol",
                "file": "../CoinPairPriceStorage.sol",
                "id": 5455,
                "nodeType": "ImportDirective",
                "scope": 5519,
                "sourceUnit": 1464,
                "src": "163:65:20",
                "symbolAliases": [
                    {
                        "foreign": {
                            "argumentTypes": null,
                            "id": 5454,
                            "name": "CoinPairPriceStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": null,
                            "src": "171:20:20",
                            "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                            }
                        },
                        "local": null
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "@moc/shared/contracts/moc-governance/Governance/Governed.sol",
                "file": "@moc/shared/contracts/moc-governance/Governance/Governed.sol",
                "id": 5457,
                "nodeType": "ImportDirective",
                "scope": 5519,
                "sourceUnit": 11457,
                "src": "229:86:20",
                "symbolAliases": [
                    {
                        "foreign": {
                            "argumentTypes": null,
                            "id": 5456,
                            "name": "Governed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": null,
                            "src": "237:8:20",
                            "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                            }
                        },
                        "local": null
                    }
                ],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 5459,
                            "name": "CoinPairPriceStorage",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1463,
                            "src": "524:20:20",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CoinPairPriceStorage_$1463",
                                "typeString": "contract CoinPairPriceStorage"
                            }
                        },
                        "id": 5460,
                        "nodeType": "InheritanceSpecifier",
                        "src": "524:20:20"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 5461,
                            "name": "ChangeContract",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 11372,
                            "src": "546:14:20",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ChangeContract_$11372",
                                "typeString": "contract ChangeContract"
                            }
                        },
                        "id": 5462,
                        "nodeType": "InheritanceSpecifier",
                        "src": "546:14:20"
                    }
                ],
                "contractDependencies": [1463, 8015, 11372, 11456, 11551],
                "contractKind": "contract",
                "documentation": {
                    "id": 5458,
                    "nodeType": "StructuredDocumentation",
                    "src": "317:161:20",
                    "text": "@title CoinPairEmergencyWhitelistChange\n@notice This contract is a ChangeContract intended to be used to add an emergency publisher to the whitelist."
                },
                "fullyImplemented": true,
                "id": 5518,
                "linearizedBaseContracts": [5518, 11372, 1463, 8015, 11456, 11551],
                "name": "CoinPairEmergencyWhitelistChange",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "4b612304",
                        "id": 5464,
                        "mutability": "mutable",
                        "name": "coinPairPrice",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 5518,
                        "src": "567:29:20",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Governed_$11456",
                            "typeString": "contract Governed"
                        },
                        "typeName": {
                            "contractScope": null,
                            "id": 5463,
                            "name": "Governed",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 11456,
                            "src": "567:8:20",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Governed_$11456",
                                "typeString": "contract Governed"
                            }
                        },
                        "value": null,
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "d2b0bf7c",
                        "id": 5466,
                        "mutability": "mutable",
                        "name": "encodedData",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 5518,
                        "src": "602:24:20",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes"
                        },
                        "typeName": {
                            "id": 5465,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "602:5:20",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                            }
                        },
                        "value": null,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 5485,
                            "nodeType": "Block",
                            "src": "888:102:20",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 5476,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 5474,
                                            "name": "coinPairPrice",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5464,
                                            "src": "898:13:20",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Governed_$11456",
                                                "typeString": "contract Governed"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "id": 5475,
                                            "name": "_coinPairPrice",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5469,
                                            "src": "914:14:20",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Governed_$11456",
                                                "typeString": "contract Governed"
                                            }
                                        },
                                        "src": "898:30:20",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Governed_$11456",
                                            "typeString": "contract Governed"
                                        }
                                    },
                                    "id": 5477,
                                    "nodeType": "ExpressionStatement",
                                    "src": "898:30:20"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 5483,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 5478,
                                            "name": "encodedData",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5466,
                                            "src": "938:11:20",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_storage",
                                                "typeString": "bytes storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "arguments": [
                                                {
                                                    "argumentTypes": null,
                                                    "id": 5481,
                                                    "name": "_emergencyPublisher",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 5471,
                                                    "src": "963:19:20",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 5479,
                                                    "name": "abi",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -1,
                                                    "src": "952:3:20",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_abi",
                                                        "typeString": "abi"
                                                    }
                                                },
                                                "id": 5480,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "encode",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "952:10:20",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                    "typeString": "function () pure returns (bytes memory)"
                                                }
                                            },
                                            "id": 5482,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "952:31:20",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes memory"
                                            }
                                        },
                                        "src": "938:45:20",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage",
                                            "typeString": "bytes storage ref"
                                        }
                                    },
                                    "id": 5484,
                                    "nodeType": "ExpressionStatement",
                                    "src": "938:45:20"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 5467,
                            "nodeType": "StructuredDocumentation",
                            "src": "633:177:20",
                            "text": "@notice Constructor\n@param _coinPairPrice Address of coin pair price to upgrade\n@param _emergencyPublisher The address of the publisher to whitelist"
                        },
                        "id": 5486,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "overrides": null,
                        "parameters": {
                            "id": 5472,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 5469,
                                    "mutability": "mutable",
                                    "name": "_coinPairPrice",
                                    "nodeType": "VariableDeclaration",
                                    "overrides": null,
                                    "scope": 5486,
                                    "src": "827:23:20",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Governed_$11456",
                                        "typeString": "contract Governed"
                                    },
                                    "typeName": {
                                        "contractScope": null,
                                        "id": 5468,
                                        "name": "Governed",
                                        "nodeType": "UserDefinedTypeName",
                                        "referencedDeclaration": 11456,
                                        "src": "827:8:20",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Governed_$11456",
                                            "typeString": "contract Governed"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 5471,
                                    "mutability": "mutable",
                                    "name": "_emergencyPublisher",
                                    "nodeType": "VariableDeclaration",
                                    "overrides": null,
                                    "scope": 5486,
                                    "src": "852:27:20",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 5470,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "852:7:20",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "826:54:20"
                        },
                        "returnParameters": {
                            "id": 5473,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "888:0:20"
                        },
                        "scope": 5518,
                        "src": "815:175:20",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [11371],
                        "body": {
                            "id": 5497,
                            "nodeType": "Block",
                            "src": "1249:108:20",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 5494,
                                                "name": "encodedData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5466,
                                                "src": "1295:11:20",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_storage",
                                                    "typeString": "bytes storage ref"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_storage",
                                                    "typeString": "bytes storage ref"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 5491,
                                                "name": "coinPairPrice",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5464,
                                                "src": "1259:13:20",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Governed_$11456",
                                                    "typeString": "contract Governed"
                                                }
                                            },
                                            "id": 5493,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "delegateCallToChanger",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 11451,
                                            "src": "1259:35:20",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                                "typeString": "function (bytes memory) external"
                                            }
                                        },
                                        "id": 5495,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1259:48:20",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 5496,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1259:48:20"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 5487,
                            "nodeType": "StructuredDocumentation",
                            "src": "996:211:20",
                            "text": "@notice Execute the changes.\n@dev Should be called by the governor, but this contract does not check that explicitly because\nit is not its responsability in the current architecture"
                        },
                        "functionSelector": "61461954",
                        "id": 5498,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "execute",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 5489,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "1240:8:20"
                        },
                        "parameters": {
                            "id": 5488,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1228:2:20"
                        },
                        "returnParameters": {
                            "id": 5490,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1249:0:20"
                        },
                        "scope": 5518,
                        "src": "1212:145:20",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 5516,
                            "nodeType": "Block",
                            "src": "1558:91:20",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 5509,
                                                        "name": "data",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 5501,
                                                        "src": "1625:4:20",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                                            "typeString": "bytes calldata"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "components": [
                                                            {
                                                                "argumentTypes": null,
                                                                "id": 5511,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "1632:7:20",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 5510,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "1632:7:20",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": null,
                                                                        "typeString": null
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "id": 5512,
                                                        "isConstant": false,
                                                        "isInlineArray": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "TupleExpression",
                                                        "src": "1631:9:20",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                                            "typeString": "bytes calldata"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 5507,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -1,
                                                        "src": "1614:3:20",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 5508,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "decode",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "1614:10:20",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                                        "typeString": "function () pure"
                                                    }
                                                },
                                                "id": 5513,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1614:27:20",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 5504,
                                                "name": "emergencyPublishWhitelistData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1424,
                                                "src": "1568:29:20",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_IterableWhitelistData_$8021_storage",
                                                    "typeString": "struct IterableWhitelistLib.IterableWhitelistData storage ref"
                                                }
                                            },
                                            "id": 5506,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "_addToWhitelist",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 8080,
                                            "src": "1568:45:20",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_IterableWhitelistData_$8021_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_IterableWhitelistData_$8021_storage_ptr_$",
                                                "typeString": "function (struct IterableWhitelistLib.IterableWhitelistData storage pointer,address)"
                                            }
                                        },
                                        "id": 5514,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1568:74:20",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 5515,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1568:74:20"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 5499,
                            "nodeType": "StructuredDocumentation",
                            "src": "1363:139:20",
                            "text": "Called by the Governed contract delegateCallToChanger method\nThis methods runs in the Governed contract storage."
                        },
                        "functionSelector": "a16227ca",
                        "id": 5517,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "impersonate",
                        "nodeType": "FunctionDefinition",
                        "overrides": null,
                        "parameters": {
                            "id": 5502,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 5501,
                                    "mutability": "mutable",
                                    "name": "data",
                                    "nodeType": "VariableDeclaration",
                                    "overrides": null,
                                    "scope": 5517,
                                    "src": "1528:19:20",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 5500,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1528:5:20",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1527:21:20"
                        },
                        "returnParameters": {
                            "id": 5503,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1558:0:20"
                        },
                        "scope": 5518,
                        "src": "1507:142:20",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 5519,
                "src": "479:1172:20"
            }
        ],
        "src": "39:1613:20"
    },
    "compiler": {
        "name": "solc",
        "version": "0.6.12+commit.27d51765.Emscripten.clang"
    },
    "networks": {},
    "schemaVersion": "3.2.4",
    "updatedAt": "2020-09-14T20:07:21.959Z",
    "devdoc": {
        "kind": "dev",
        "methods": {
            "changeIGovernor(address)": {
                "params": {
                    "newIGovernor": "New governor address"
                }
            },
            "constructor": {
                "params": {
                    "_coinPairPrice": "Address of coin pair price to upgrade",
                    "_emergencyPublisher": "The address of the publisher to whitelist"
                }
            },
            "delegateCallToChanger(bytes)": {
                "params": {
                    "data": "the serialized function arguments"
                }
            },
            "execute()": {
                "details": "Should be called by the governor, but this contract does not check that explicitly because it is not its responsability in the current architecture"
            }
        },
        "title": "CoinPairEmergencyWhitelistChange",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "changeIGovernor(address)": {
                "notice": "Change the contract's governor. Should be called through the old governance system"
            },
            "constructor": "Constructor",
            "delegateCallToChanger(bytes)": {
                "notice": "This method is used by a change contract to access the storage freely even without a setter."
            },
            "execute()": {
                "notice": "Execute the changes."
            },
            "governor()": {
                "notice": "The address of the contract which governs this one"
            },
            "impersonate(bytes)": {
                "notice": "Called by the Governed contract delegateCallToChanger method This methods runs in the Governed contract storage."
            }
        },
        "notice": "This contract is a ChangeContract intended to be used to add an emergency publisher to the whitelist.",
        "version": 1
    }
}
